RegExp（）
正则表达式用于字符串匹配
各个语言通用
RegExp（）是一个对象
使用时需要声明一下
	var reg = new RegExp（pattern，attributes）
	var reg = /pattern/
test方法检测是否有该字符串并将它返回，没有则返回null
c{n}对c匹配连续n次
c{1}对c匹配1次
c{2}对c匹配连续2次
c{3}对c匹配连续3次有则返回没有返回null
c{3,5}对c匹配连续3到5次，尽可能多的匹配
c{3,}对c匹配连续至少3次
c*和c{0，}
c+和c{1，}
c？和c{0，1}
贪心模式非贪心模式
	默认贪婪模式多匹配
	/c{1,}?/非贪婪模式（少匹配）
/^c/以c开头的
/c$/以c结尾的并匹配
/./除了换行之外的所有字符每个点匹配一个字符
/^./不能以换行开头的
/b|c/匹配b或c
/^b|c.+/以b为开头或c.+
/^(b|c).+/以b开头或以c开头以及后面的所有
/^[abc]/或者a或者b或者c开头
/^[a-zA-Z][a-zA-Z0-9_]+/变量命名方式以字母开头，包括字母数字下划线
/[^abc]/表示排除abc，从前往后直到找到一个不是abc的字符并返回他
[^0-9]表示非数字
[^a-z]表示非小写字母，
/\bc/以c为边界即c左右没有字符或者c左右是空格或换行或汉字，是边界返回c，不是边界返回null
/\Bc/匹配非边界
/\d/匹配数字
/\D/匹配非数字
/\s/匹配空白字符，空格换行换页制表垂直换行等同于匹配[\f\n\r\t\v]
/\S/匹配非空白
g在全局中搜索 i忽略大小写
/\w/单词字符匹配一个大小写字母，数字，下划线
/\W/非单词字符
/(\w)\1/匹配第一个字母并把它在匹配一边
匹配元字符需要加上\转义


字符串中自带的支持正则表达式的语法
	search(/正则表达式/)搜索字符串找不到返回-1
	match(/正则表达式/)找不到返回null找到返回数组
	replace(/正则表达式/,'替换成的字符')
	split()分割字符串，返回一个数组
	\d{2}$
	replace(/\s+/g,' ')
	/\d+/

